{"version":3,"sources":["preset.html"],"names":[],"mappingsfile":"preset.html","sourcesContent":["<html>\r\n<head>\r\n    <title>Flot Preset</title>\r\n    <link href=\"img/favicon.png\" rel=\"shortcut icon\" type=\"image/x-icon\"></link>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"../../lib/css/themes/jquery-ui/default/jquery-ui.min.css\"></link>\r\n    <script type=\"text/javascript\" src=\"../../lib/js/jquery-1.11.1.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../../lib/js/socket.io.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../../_socket/info.js\"></script>\r\n    <script type=\"text/javascript\">\r\n        var presets         \t= {};\r\n        var currentChart    \t= null;\r\n        var loaded          \t= false;\r\n        var instance        \t= 0;\r\n        var socket;\r\n\r\n        function init() {\r\n            console.log('Initialize...');\r\n            var params = location.href.split('?')[1];\r\n            if (params && params.match(/^preset=/)) {\r\n                currentChart = decodeURIComponent(params.replace(/^preset=/, ''));\r\n            }\r\n            setTimeout(function () {\r\n                initSocket();\r\n            }, 200);\r\n        }\r\n\r\n        function initSocket() {\r\n            console.log('Init connection...');\r\n            // Correct \"port only\" url given from web adapter:\r\n            if (window.socketUrl && window.socketUrl[0] === ':') {\r\n                window.socketUrl = location.protocol + '//' + location.hostname + socketUrl;\r\n            }\r\n            // Read instances\r\n            socket = io.connect(socketUrl, {\r\n                query: {\r\n                    key: socketSession\r\n                },\r\n                reconnectionDelay: 10000,\r\n                reconnectionAttempts: Infinity,\r\n                upgrade: typeof socketForceWebSockets !== 'undefined' ? !socketForceWebSockets : undefined,\r\n                rememberUpgrade: typeof socketForceWebSockets !== 'undefined' ? socketForceWebSockets : undefined,\r\n                transports: typeof socketForceWebSockets !== 'undefined' ? (socketForceWebSockets ? ['websocket'] : undefined) : undefined\r\n            });\r\n\r\n            socket.on('connect', function () {\r\n                console.log('Connected');\r\n                setTimeout(function () {\r\n                    socket.emit('name', 'flotPreset');\r\n                }, 50);\r\n                setTimeout(function () {\r\n                    getPresets(socket, function () {\r\n                        console.log(\"Got presets\");\r\n                        console.log(presets);\r\n                        if (currentChart && presets[currentChart]) {\r\n                            loadChart(currentChart);\r\n                        } else if (currentChart && presets[\"flot.\" + instance + \".\" + currentChart]) {\r\n                            loadChart(\"flot.\" + instance + \".\" + currentChart);\r\n                        } else {\r\n                            showPresets();\r\n                        }\r\n                    });\r\n                }, 100);\r\n            });\r\n\r\n            socket.on('disconnect', function () {\r\n                console.log('Lost connection');\r\n            });\r\n\r\n            socket.on('error', function (e) {\r\n                console.error('Socket error: ' + e);\r\n            });\r\n            socket.on('connect_error', function (e) {\r\n                console.error('Socket error: ' + e);\r\n            });\r\n        }\r\n\r\n        function getPresets(socket, callback) {\r\n            // read presets\r\n            socket.emit('getObjectView', 'chart', 'chart', {\r\n                startkey: 'flot.' + instance + '.',\r\n                endkey: 'flot.' + instance + '.\\u9999'\r\n            }, function (err, res) {\r\n                presets = {};\r\n                loaded  = true;\r\n                if (res && res.rows) {\r\n                    for (var i = 0; i < res.rows.length; i++) {\r\n                        presets[res.rows[i].value._id] = res.rows[i].value;\r\n                    }\r\n                }\r\n                callback && callback();\r\n            });\r\n        }\r\n\r\n        function showPresets() {\r\n            var presetList = \"\";\r\n            for (var id in presets) {\r\n                if (!presets.hasOwnProperty(id)) continue;\r\n                var obj = presets[id];\r\n                presetList += \"<a href='index.html?\" + obj.native.url + \"' data-role='button'>\" + obj.common.name + \"</a><br>\";\r\n            }\r\n            $('#presetList').html(presetList);\r\n        }\r\n\r\n        function loadChart(id, callback) {\r\n            window.location.replace(\"index.html?\" + presets[id].native.url);\r\n            callback && callback();\r\n        }\r\n\r\n        $(document).ready(init());\r\n\r\n    </script>\r\n</head>\r\n<body>\r\n<p id=\"presetList\">loading...</p>\r\n</body>\r\n</html>\r\n"]}